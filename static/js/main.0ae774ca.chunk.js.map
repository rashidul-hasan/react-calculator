{"version":3,"sources":["lib/buttons.js","lib/constants.js","components/ButtonOperand.js","components/Display.js","components/ButtonOperator.js","components/Title.js","App.js","serviceWorker.js","index.js"],"names":["BUTTON_ONE","name","label","value","BUTTON_TWO","BUTTON_THREE","BUTTON_FOUR","BUTTON_FIVE","BUTTON_SIX","BUTTON_SEVEN","BUTTON_EIGHT","BUTTON_NINE","BUTTON_ZERO","BUTTON_ADD","BUTTON_SUBTRACT","BUTTON_DIVIDE","BUTTON_MULTIPLY","BUTTON_TYPE_OPERATOR","BUTTON_TYPE_OPERAND","ButtonOperand","props","react_default","a","createElement","id","button","type","className","dangerouslySetInnerHTML","__html","onClick","onPress","styles","display","borderBottomLeftRadius","borderBottomRightRadius","result","borderTopLeftRadius","borderTopRightRadius","color","Display","style","readOnly","ButtonOperator","Title","width","margin","textAlign","text","App","state","expression","lastUsedOperator","onButtonPress","buttonType","_this","updateDisplay","updateExpression","calculateResult","setState","evaluate","e","console","log","displayValue","String","onPressClear","_this$state","this","Fragment","Title_Title","marginTop","Display_Display","ButtonOperator_ButtonOperator","ButtonOperand_ButtonOperand","React","Component","Boolean","window","location","hostname","match","ReactDOM","render","src_App_0","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.0ae774ca.chunk.js","sourcesContent":["export const BUTTON_ONE = {name: \"one\", label: `&#49;`, value: 1}\r\nexport const BUTTON_TWO = {name: \"two\", label: `&#50;`, value: 2}\r\nexport const BUTTON_THREE = {name: \"three\", label: `&#51;`, value: 3}\r\nexport const BUTTON_FOUR = {name: \"four\", label: `&#52;`, value: 4}\r\nexport const BUTTON_FIVE = {name: \"five\", label: `&#53;`, value: 5}\r\nexport const BUTTON_SIX = {name: \"six\", label: `&#54;`, value: 6}\r\nexport const BUTTON_SEVEN = {name: \"seven\", label: `&#55;`, value: 7}\r\nexport const BUTTON_EIGHT = {name: \"eight\", label: `&#56;`, value: 8}\r\nexport const BUTTON_NINE = {name: \"nine\", label: `&#57;`, value: 9}\r\nexport const BUTTON_ZERO = {name: \"zero\", label: `&#48;`, value: 0}\r\n\r\nexport const BUTTON_ADD = {name: \"add\", label: `&#43;`, value: '+'}\r\nexport const BUTTON_SUBTRACT = {name: \"subtract\", label: `&#8722;`, value: '-'}\r\nexport const BUTTON_DIVIDE = {name: \"divide\", label: `&#247;`, value: '/'}\r\nexport const BUTTON_MULTIPLY = {name: \"multiply\", label: `&#215;`, value: '*'}\r\n","export const BUTTON_TYPE_OPERATOR = 'operator'\r\nexport const BUTTON_TYPE_OPERAND = 'operand'\r\n","import React from \"react\"\r\nimport {BUTTON_TYPE_OPERAND} from \"../lib/constants\";\r\n\r\nexport const ButtonOperand = (props) => {\r\n    return (\r\n        <button id={props.button.name} type=\"button\"\r\n                className=\"operand-group operand-group-light\"\r\n                dangerouslySetInnerHTML={{__html: props.button.label}}\r\n                onClick={() => props.onPress(BUTTON_TYPE_OPERAND, props.button)}\r\n        >\r\n\r\n        </button>\r\n    )\r\n}\r\n","import React from \"react\";\r\n\r\nconst styles = {\r\n    display: {\r\n        borderBottomLeftRadius: 0,\r\n        borderBottomRightRadius: 0\r\n    },\r\n    result: {\r\n        borderTopLeftRadius: 0,\r\n        borderTopRightRadius: 0,\r\n        color: '#ccc'\r\n    },\r\n}\r\nexport const Display = (props) => {\r\n    return (\r\n        <form>\r\n            <div id=\"display1\"\r\n                   className=\"form-control-lg text-right form-input-light\"\r\n                   dangerouslySetInnerHTML={{__html: props.display}}\r\n                   value={props.display}\r\n                 style={styles.display}></div>\r\n            <input readOnly id=\"display2\" type=\"text\"\r\n                   value={props.result}\r\n                   className=\"form-control-lg text-right  form-input-light\"\r\n                   style={styles.result}/>\r\n        </form>\r\n    )\r\n}\r\n\r\n","import React from \"react\"\r\nimport {BUTTON_TYPE_OPERATOR} from \"../lib/constants\";\r\n\r\nexport const ButtonOperator = (props) => {\r\n    return (\r\n        <button id={props.button.name} type=\"button\"\r\n                className=\"operator-group operator-group-light\"\r\n                dangerouslySetInnerHTML={{__html: props.button.label}}\r\n                onClick={() => props.onPress(BUTTON_TYPE_OPERATOR, props.button)}\r\n        >\r\n        </button>\r\n    )\r\n}\r\n","import React from 'react';\r\n\r\nexport const Title = (props) => {\r\n    return (\r\n        <h1 style={{width: '50%',\r\n                    margin: '0 auto',\r\n                    textAlign: 'center'}}>{props.text}</h1>\r\n    )\r\n}","import React from 'react';\nimport './App.css';\nimport {\n    BUTTON_ADD, BUTTON_DIVIDE,\n    BUTTON_EIGHT,\n    BUTTON_FIVE,\n    BUTTON_FOUR, BUTTON_MULTIPLY, BUTTON_NINE,\n    BUTTON_ONE,\n    BUTTON_SEVEN,\n    BUTTON_SIX, BUTTON_SUBTRACT,\n    BUTTON_THREE,\n    BUTTON_TWO, BUTTON_ZERO\n} from \"./lib/buttons\";\nimport {ButtonOperand} from \"./components/ButtonOperand\";\nimport {Display} from \"./components/Display\";\nimport {ButtonOperator} from \"./components/ButtonOperator\";\nimport {BUTTON_TYPE_OPERAND, BUTTON_TYPE_OPERATOR} from \"./lib/constants\";\nimport {Title} from \"./components/Title\";\nimport {evaluate} from \"mathjs\"\n\nclass App extends React.Component {\n\n    state = {\n        display: '',\n        expression: '',\n        result: 0,\n        lastUsedOperator: null\n    }\n\n    onButtonPress = (buttonType, button) => {\n\n        // update display\n        const display = this.updateDisplay(buttonType, button);\n\n        // update state if required\n        let lastUsedOperator = null;\n        if (buttonType === BUTTON_TYPE_OPERAND) {\n            lastUsedOperator = null\n        } else {\n            lastUsedOperator = button.value\n        }\n\n\n        const expression = this.updateExpression(buttonType, button);\n\n        const result = this.calculateResult(expression);\n \n        this.setState({\n            display,\n            lastUsedOperator,\n            expression,\n            result\n        });\n\n    };\n\n    calculateResult = (expression) => {\n        let {result} = this.state;\n        try{\n            result = evaluate(expression);\n        } catch (e) {\n            console.log(\"Evaluation error\");\n        }\n\n        return result;\n\n    }\n\n    updateExpression = (buttonType, button) => {\n        let {expression} = this.state;\n\n        console.log('last op', this.state.lastUsedOperator);\n        if (this.state.lastUsedOperator && buttonType === BUTTON_TYPE_OPERATOR){\n            return expression;\n        }\n\n        expression += button.value;\n        return expression\n    }\n\n    updateDisplay = (buttonType, button) => {\n\n        const {display} = this.state;\n\n        // prevent adding multiple operator in a sequence\n        if (this.state.lastUsedOperator && buttonType === BUTTON_TYPE_OPERATOR){\n            return display;\n        }\n\n        let displayValue = button.value;\n\n        if (buttonType === BUTTON_TYPE_OPERATOR) {\n            displayValue = button.label;\n        }\n\n        return String(display) + String(displayValue);\n    }\n\n    onPressClear = () => {\n        // reset all states\n        this.setState({\n            display: '',\n            expression: '',\n            result: 0,\n            lastUsedOperator: null\n        });\n    }\n\n    render () {\n\n        const {display, result} = this.state;\n\n        return (\n            <React.Fragment>\n                \n                <Title text=\"React Calculator\"/>   \n\n                <div className=\"container container-light\" style={{marginTop: 50}}>\n\n                    <Display display={display} result={result}/>\n\n                    <div className=\"d-flex justify-content-between button-row\">\n                        <button id=\"left-parenthesis\" type=\"button\" className=\"operator-group operator-group-light\">&#40;</button>\n                        <button id=\"right-parenthesis\" type=\"button\" className=\"operator-group operator-group-light\">&#41;</button>\n                        <button id=\"square-root\" type=\"button\" className=\"operator-group operator-group-light\">&#8730;</button>\n                        <button id=\"square\" type=\"button\" className=\"operator-group operator-group-light\">&#120;&#178;</button>\n                    </div>\n\n                    <div className=\"d-flex justify-content-between button-row\">\n                        <button id=\"clear\" className=\"clear-light\" type=\"button\" onClick={this.onPressClear} >&#67;</button>\n                        <button id=\"backspace\" className=\"backspace-light\" type=\"button\">&#9003;</button>\n                        <button id=\"ans\" type=\"button\" className=\"operand-group ans-light\">&#65;&#110;&#115;</button>\n                        <ButtonOperator button={BUTTON_DIVIDE} onPress={this.onButtonPress}/>\n                    </div>\n\n\n                    <div className=\"d-flex justify-content-between button-row\">\n                        <ButtonOperand button={BUTTON_SEVEN} onPress={this.onButtonPress}/>\n                        <ButtonOperand button={BUTTON_EIGHT} onPress={this.onButtonPress}/>\n                        <ButtonOperand button={BUTTON_NINE} onPress={this.onButtonPress}/>\n                        <ButtonOperator button={BUTTON_MULTIPLY} onPress={this.onButtonPress}/>\n                    </div>\n\n\n                    <div className=\"d-flex justify-content-between button-row\">\n                        <ButtonOperand button={BUTTON_FOUR} onPress={this.onButtonPress}/>\n                        <ButtonOperand button={BUTTON_FIVE} onPress={this.onButtonPress}/>\n                        <ButtonOperand button={BUTTON_SIX} onPress={this.onButtonPress}/>\n                        <ButtonOperator button={BUTTON_SUBTRACT} onPress={this.onButtonPress}/>\n                    </div>\n\n\n                    <div className=\"d-flex justify-content-between button-row\">\n                        <ButtonOperand button={BUTTON_ONE} onPress={this.onButtonPress}/>\n                        <ButtonOperand button={BUTTON_TWO} onPress={this.onButtonPress}/>\n                        <ButtonOperand button={BUTTON_THREE} onPress={this.onButtonPress}/>\n                        <ButtonOperator button={BUTTON_ADD} onPress={this.onButtonPress}/>\n                        {/*<button id=\"add\" type=\"button\" className=\"operator-group operator-group-light\">&#43;</button>*/}\n                    </div>\n\n                    <div className=\"d-flex justify-content-between button-row\">\n                        <button id=\"percentage\" type=\"button\" className=\"operand-group operand-group-light\">&#37;</button>\n                        <ButtonOperand button={BUTTON_ZERO} onPress={this.onButtonPress}/>\n                        <button id=\"decimal\" type=\"button\" className=\"operand-group operand-group-light\">&#46;</button>\n                        <button id=\"equal\" className=\"equal-light\" type=\"button\">&#61;</button>\n                    </div>\n\n                </div>\n            </React.Fragment>\n        );\n    }\n\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n// import './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}