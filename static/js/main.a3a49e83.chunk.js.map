{"version":3,"sources":["App.js","serviceWorker.js","index.js"],"names":["App","react_default","a","createElement","className","style","marginTop","readOnly","id","type","marginBottom","Boolean","window","location","hostname","match","ReactDOM","render","src_App","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.a3a49e83.chunk.js","sourcesContent":["import React from 'react';\nimport './App.css';\n\nfunction App() {\n  return (\n        <div className=\"container container-light\" style={{marginTop: 150}}>\n            <h1>Calculator App</h1>\n\n            <form>\n                <input readOnly id=\"display1\" type=\"text\" className=\"form-control-lg text-right  form-input-light\" style={{marginBottom: 10}}/>\n                <input readOnly id=\"display2\" type=\"text\" className=\"form-control-lg text-right  form-input-light\" />\n            </form>\n\n            <div className=\"d-flex justify-content-between button-row\">\n                <button id=\"left-parenthesis\" type=\"button\" className=\"operator-group operator-group-light\">&#40;</button>\n                <button id=\"right-parenthesis\" type=\"button\" className=\"operator-group operator-group-light\">&#41;</button>\n                <button id=\"square-root\" type=\"button\" className=\"operator-group operator-group-light\">&#8730;</button>\n                <button id=\"square\" type=\"button\" className=\"operator-group operator-group-light\">&#120;&#178;</button>\n            </div>\n\n            <div className=\"d-flex justify-content-between button-row\">\n                <button id=\"clear\" className=\"clear-light\" type=\"button\">&#67;</button>\n                <button id=\"backspace\" className=\"backspace-light\" type=\"button\">&#9003;</button>\n                <button id=\"ans\" type=\"button\" className=\"operand-group ans-light\">&#65;&#110;&#115;</button>\n                <button id=\"divide\" type=\"button\" className=\"operator-group operator-group-light\">&#247;</button>\n            </div>\n\n\n            <div className=\"d-flex justify-content-between button-row\">\n                <button id=\"seven\" type=\"button\" className=\"operand-group operand-group-light\">&#55;</button>\n                <button id=\"eight\" type=\"button\" className=\"operand-group operand-group-light\">&#56;</button>\n                <button id=\"nine\" type=\"button\" className=\"operand-group operand-group-light\">&#57;</button>\n                <button id=\"multiply\" type=\"button\" className=\"operator-group operator-group-light operand-group-light\">&#215;</button>\n            </div>\n\n\n            <div className=\"d-flex justify-content-between button-row\">\n                <button id=\"four\" type=\"button\" className=\"operand-group operand-group-light\">&#52;</button>\n                <button id=\"five\" type=\"button\" className=\"operand-group operand-group-light\">&#53;</button>\n                <button id=\"six\" type=\"button\" className=\"operand-group operand-group-light\">&#54;</button>\n                <button id=\"subtract\" type=\"button\" className=\"operator-group operator-group-light\">&#8722;</button>\n            </div>\n\n\n            <div className=\"d-flex justify-content-between button-row\">\n                <button id=\"one\" type=\"button\" className=\"operand-group operand-group-light\">&#49;</button>\n                <button id=\"two\" type=\"button\" className=\"operand-group operand-group-light\">&#50;</button>\n                <button id=\"three\" type=\"button\" className=\"operand-group operand-group-light\">&#51;</button>\n                <button id=\"add\" type=\"button\" className=\"operator-group operator-group-light\">&#43;</button>\n            </div>\n\n            <div className=\"d-flex justify-content-between button-row\">\n                <button id=\"percentage\" type=\"button\" className=\"operand-group operand-group-light\">&#37;</button>\n                <button id=\"zero\" type=\"button\" className=\"operand-group operand-group-light\">&#48;</button>\n                <button id=\"decimal\" type=\"button\" className=\"operand-group operand-group-light\">&#46;</button>\n                <button id=\"equal\" className=\"equal-light\" type=\"button\">&#61;</button>\n            </div>\n\n        </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}